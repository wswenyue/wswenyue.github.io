import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,f as t}from"./app-BWFs2kdN.js";const s={},i=t(`<h1 id="python-相关" tabindex="-1"><a class="header-anchor" href="#python-相关"><span>Python 相关</span></a></h1><h3 id="pip3的安装" tabindex="-1"><a class="header-anchor" href="#pip3的安装"><span><code>pip3</code>的安装</span></a></h3><p>pip 是Python的包管理工具。安装Python后，理论上应该安装好了pip 如果没有安装则需要brew 重新卸载在安装 pip3是Python3对应的版本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># pip3 可以写成这样</span>
$ <span class="token builtin class-name">alias</span> <span class="token assign-left variable">pip3</span><span class="token operator">=</span><span class="token string">&#39;python3 -mpip&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="virtualenv-python-版本模块环境管理" tabindex="-1"><a class="header-anchor" href="#virtualenv-python-版本模块环境管理"><span><code>virtualenv</code> python 版本模块环境管理</span></a></h3><p>用命令source venv/bin/activate进入一个virtualenv环境时，virtualenv会修改相关环境变量，让命令python和pip均指向当前的virtualenv环境。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装virtualenv</span>
$ pip3 <span class="token function">install</span> virtualenv
<span class="token comment"># 在当前文件下面创建Python2.7的运行环境venv2.7</span>
$ virtualenv <span class="token parameter variable">--python</span><span class="token operator">=</span>/usr/bin/python2.7 venv2.7
<span class="token comment"># 以virtualenv默认的Python环境创建运行环境venv </span>
<span class="token comment"># --no-site-packages :不复制已经安装到系统Python环境中的所有第三方包</span>
$ virtualenv --no-site-packages venv
<span class="token comment"># 使venv 环境激活</span>
<span class="token comment"># 在激活的环境下使用pip 安装的包都会放到激活的环境下</span>
$ <span class="token builtin class-name">source</span> venv/bin/activate
<span class="token comment"># 退出 激活的环境</span>
$ deactivate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python-安装模块" tabindex="-1"><a class="header-anchor" href="#python-安装模块"><span>python 安装模块</span></a></h3><p>Python的包管理器是pip所以安装包就通过pip安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># eg 安装包abc</span>
$ pip <span class="token function">install</span> abc
<span class="token comment"># 指定版本号，安装特定版本的包</span>
$ pip <span class="token function">install</span> <span class="token assign-left variable">abc</span><span class="token operator">==</span><span class="token number">1.2</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),p=[i];function o(l,c){return e(),a("div",null,p)}const v=n(s,[["render",o],["__file","python.html.vue"]]),h=JSON.parse(`{"path":"/note/python.html","title":"Python 相关","lang":"zh-CN","frontmatter":{"description":"Python 相关 pip3的安装 pip 是Python的包管理工具。安装Python后，理论上应该安装好了pip 如果没有安装则需要brew 重新卸载在安装 pip3是Python3对应的版本 virtualenv python 版本模块环境管理 用命令source venv/bin/activate进入一个virtualenv环境时，virtua...","head":[["meta",{"property":"og:url","content":"https://wswenyue.vip/note/python.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"Python 相关"}],["meta",{"property":"og:description","content":"Python 相关 pip3的安装 pip 是Python的包管理工具。安装Python后，理论上应该安装好了pip 如果没有安装则需要brew 重新卸载在安装 pip3是Python3对应的版本 virtualenv python 版本模块环境管理 用命令source venv/bin/activate进入一个virtualenv环境时，virtua..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-31T13:08:40.000Z"}],["meta",{"property":"article:author","content":"Mr.WenYue"}],["meta",{"property":"article:modified_time","content":"2024-03-31T13:08:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-31T13:08:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.WenYue\\",\\"url\\":\\"https://github.com/wswenyue/\\"}]}"]]},"headers":[{"level":3,"title":"pip3的安装","slug":"pip3的安装","link":"#pip3的安装","children":[]},{"level":3,"title":"virtualenv   python 版本模块环境管理","slug":"virtualenv-python-版本模块环境管理","link":"#virtualenv-python-版本模块环境管理","children":[]},{"level":3,"title":"python 安装模块","slug":"python-安装模块","link":"#python-安装模块","children":[]}],"git":{"createdTime":1711890520000,"updatedTime":1711890520000,"contributors":[{"name":"wswenyue","email":"wswenyue@163.com","commits":1}]},"readingTime":{"minutes":0.92,"words":276},"filePathRelative":"note/python.md","localizedDate":"2024年3月31日","excerpt":"\\n<h3><code>pip3</code>的安装</h3>\\n<p>pip 是Python的包管理工具。安装Python后，理论上应该安装好了pip\\n如果没有安装则需要brew 重新卸载在安装\\npip3是Python3对应的版本</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># pip3 可以写成这样</span>\\n$ <span class=\\"token builtin class-name\\">alias</span> <span class=\\"token assign-left variable\\">pip3</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">'python3 -mpip'</span>\\n</code></pre></div>","autoDesc":true}`);export{v as comp,h as data};
