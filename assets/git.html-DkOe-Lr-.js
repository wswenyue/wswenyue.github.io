import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as i,c as r,a,b as p,d as l,f as e}from"./app-BWFs2kdN.js";const o={},c=e(`<h1 id="git-相关" tabindex="-1"><a class="header-anchor" href="#git-相关"><span>git 相关</span></a></h1><h3 id="查询master分支-push、fetch时间" tabindex="-1"><a class="header-anchor" href="#查询master分支-push、fetch时间"><span>查询master分支 push、fetch时间</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$  <span class="token function">git</span> reflog origin/master <span class="token parameter variable">--date</span><span class="token operator">=</span>iso 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="git-rev-parse-使用" tabindex="-1"><a class="header-anchor" href="#git-rev-parse-使用"><span>git rev-parse 使用</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 获取HEAD指向的commit的SHA值（短）</span>
$ <span class="token function">git</span> rev-parse <span class="token parameter variable">--short</span> HEAD
<span class="token comment"># 获取HEAD指向的分支名称,当前分支。</span>
$ <span class="token function">git</span> rev-parse --abbrev-ref HEAD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tag-相关" tabindex="-1"><a class="header-anchor" href="#tag-相关"><span>tag 相关</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 显示当前离当前提交最近的tag。注意这个tag有可能不是远端最新的tag</span>
<span class="token comment"># 如果tag指向最新提交则只显示tag，如果不是则会显示在这个tag上有多少次提交，最新的commit id;</span>
<span class="token comment"># eg:tag1-2-g026498b 2:表示自打tag tag1 以来有2次提交(commit)g026498b：g 为git的缩写，在多种管理工具并存的环境中很有用处</span>
$ <span class="token function">git</span> describe <span class="token parameter variable">--tags</span>

<span class="token comment"># 输出远端tag list信息</span>
$ <span class="token function">git</span> ls-remote <span class="token parameter variable">--tags</span> <span class="token parameter variable">-q</span>
<span class="token comment"># 输出远端tag list信息,仅仅输出tag name</span>
$ <span class="token function">git</span> ls-remote <span class="token parameter variable">--tags</span> <span class="token parameter variable">-q</span> <span class="token operator">|</span><span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;/&quot;</span> <span class="token parameter variable">-f</span> <span class="token number">3</span>
<span class="token comment"># 获取远端的tag name列表，去掉了tag所有字母，并按照首位倒叙排序。remote_tags是个array</span>
$ <span class="token assign-left variable">remote_tags</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> ls-remote <span class="token parameter variable">--tags</span> <span class="token parameter variable">-q</span> <span class="token operator">|</span><span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;/&quot;</span> <span class="token parameter variable">-f</span> <span class="token number">3</span> <span class="token operator">|</span><span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;[:alpha:]&quot;</span><span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-r</span><span class="token variable">)</span></span><span class="token punctuation">)</span>

<span class="token comment"># 判断远端仓库是否包含某个tag</span>
$ <span class="token function">git</span> branch <span class="token parameter variable">--contains</span> tags/<span class="token variable">\${tag}</span><span class="token punctuation">;</span>
<span class="token comment"># eg：</span>
<span class="token function">git</span> branch <span class="token parameter variable">--contains</span> tags/<span class="token variable">\${tag}</span> <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
		<span class="token builtin class-name">echo</span> <span class="token string">&quot;the <span class="token variable">\${tag}</span> in remote is not exist !!! Please check your input.&quot;</span>
		<span class="token builtin class-name">exit</span> <span class="token number">200</span>
<span class="token keyword">fi</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bfg-使用-git历史修改者" tabindex="-1"><a class="header-anchor" href="#bfg-使用-git历史修改者"><span>BFG 使用 - git历史修改者</span></a></h3>`,8),m={href:"https://github.com/rtyley/bfg-repo-cleaner",target:"_blank",rel:"noopener noreferrer"},d=e(`<p>删除git历史中误提交的某个文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 1.删除git历史中误提交的某个文件夹 eg：.gradle/*</span>
<span class="token comment"># --no-blob-protection :表示不需要保护。bfg默认会保护HEAD版本，设置该字段后就不会在保护，如果不需要修改头指针那是比较好的。</span>
<span class="token comment"># .git 是当前项目的git</span>
$ <span class="token function">java</span> <span class="token parameter variable">-jar</span> ~/Downloads/bfg-1.13.0.jar --delete-folders .gradle .git --no-blob-protection

<span class="token comment"># 2. 整理relog 和通知gc处理</span>
$ <span class="token function">git</span> reflog expire <span class="token parameter variable">--expire</span><span class="token operator">=</span>now <span class="token parameter variable">--all</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> gc <span class="token parameter variable">--prune</span><span class="token operator">=</span>now <span class="token parameter variable">--aggressive</span>

<span class="token comment"># 3. 推送到远程仓库，如果涉及修改了HEAD那么就需要强制覆盖push</span>
$ <span class="token function">git</span> push
<span class="token comment"># 4. 本地如果有问题，那么直接删除本地项目文件，重新拉取即可。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function g(u,v){const s=t("ExternalLinkIcon");return i(),r("div",null,[c,a("p",null,[a("a",m,[p("bfg-repo-cleaner"),l(s)])]),d])}const h=n(o,[["render",g],["__file","git.html.vue"]]),f=JSON.parse('{"path":"/note/git.html","title":"git 相关","lang":"zh-CN","frontmatter":{"cover":"/assets/images/cover2.jpg","icon":"pen-to-square","date":"2022-01-12T00:00:00.000Z","category":["蔬菜"],"tag":["红","圆"],"star":true,"sticky":true,"description":"git 相关 查询master分支 push、fetch时间 git rev-parse 使用 tag 相关 BFG 使用 - git历史修改者 bfg-repo-cleaner 删除git历史中误提交的某个文件夹","head":[["meta",{"property":"og:url","content":"https://wswenyue.vip/note/git.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"git 相关"}],["meta",{"property":"og:description","content":"git 相关 查询master分支 push、fetch时间 git rev-parse 使用 tag 相关 BFG 使用 - git历史修改者 bfg-repo-cleaner 删除git历史中误提交的某个文件夹"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wswenyue.vip/assets/images/cover2.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-31T13:08:40.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://wswenyue.vip/assets/images/cover2.jpg"}],["meta",{"name":"twitter:image:alt","content":"git 相关"}],["meta",{"property":"article:author","content":"Mr.WenYue"}],["meta",{"property":"article:tag","content":"红"}],["meta",{"property":"article:tag","content":"圆"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-31T13:08:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git 相关\\",\\"image\\":[\\"https://wswenyue.vip/assets/images/cover2.jpg\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-31T13:08:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.WenYue\\",\\"url\\":\\"https://github.com/wswenyue/\\"}]}"]]},"headers":[{"level":3,"title":"查询master分支 push、fetch时间","slug":"查询master分支-push、fetch时间","link":"#查询master分支-push、fetch时间","children":[]},{"level":3,"title":"git rev-parse 使用","slug":"git-rev-parse-使用","link":"#git-rev-parse-使用","children":[]},{"level":3,"title":"tag 相关","slug":"tag-相关","link":"#tag-相关","children":[]},{"level":3,"title":"BFG 使用 - git历史修改者","slug":"bfg-使用-git历史修改者","link":"#bfg-使用-git历史修改者","children":[]}],"git":{"createdTime":1711890520000,"updatedTime":1711890520000,"contributors":[{"name":"wswenyue","email":"wswenyue@163.com","commits":1}]},"readingTime":{"minutes":1.72,"words":517},"filePathRelative":"note/git.md","localizedDate":"2022年1月12日","excerpt":"\\n<h3>查询master分支 push、fetch时间</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$  <span class=\\"token function\\">git</span> reflog origin/master <span class=\\"token parameter variable\\">--date</span><span class=\\"token operator\\">=</span>iso \\n</code></pre></div>","autoDesc":true}');export{h as comp,f as data};
